---
###############################################################################
# Default
###############################################################################
# Ensure defaults work with and without unattended upgrades enabled.
#
# dist-upgrade will only appear in history.log if action taken (running
# with no upgrade will not be logged) which will only occur if there is a
# distribution upgrade before the source container is updated.
#
# Decision: ignore testing - this is a simple boolean variable.
#
# Tests:
# * apt-daily, apt-daily-upgrade, unattended-upgrades services are active.
# * sources.list.d/debian-security.sources configured.
# * sources.list.d/debian.sources configured.
# * apt.conf.d/20auto-upgrades configured.
# * apt.conf.d/50unattended-upgrades configured.
# * apt-listchanges, unattended-upgrades, apt-config-auto-update,
#   powermgmt-base packages installed.
# * apt.conf.d/52unattended-upgrades-local configured if enabled.
# * sources.list is disabled correctly for non-existing file (default)
# * sources.list is disabled correctly for existing file (unattended)

dependency:
  name: 'galaxy'
driver:
  name: 'podman'
provisioner:
  name: 'ansible'
  config_options:
    defaults:
      interpreter_python: 'auto_silent'
      callback_whitelist: 'profile_tasks, timer, yaml'
    ssh_connection:
      pipelining: false
  inventory:
    group_vars:
      all:
        apt_sources_list_disable: true
    host_vars:
      apt-debian-13-default-unattended:
        apt_unattended_enable: true
        apt_unattended_automatic_reboot: true
        apt_unattended_automatic_reboot_time: '04:00'
platforms:
  - name: 'apt-debian-13-default'
    image: 'ghcr.io/hifis-net/debian-systemd:13'
    systemd: 'always'
    volumes:
      - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
    command: '/lib/systemd/systemd'
    pre_build_image: true
  - name: 'apt-debian-13-default-unattended'
    image: 'ghcr.io/hifis-net/debian-systemd:13'
    systemd: 'always'
    volumes:
      - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
    command: '/lib/systemd/systemd'
    pre_build_image: true
verifier:
  name: 'ansible'
lint: |
  set -e
  yamllint .
  ansible-lint .
scenario:
  test_sequence:
    # - 'dependency'
    # - 'cleanup'
    - 'destroy'
    - 'syntax'
    - 'create'
    - 'prepare'
    - 'converge'
    - 'idempotence'
    # - 'side_effect'
    - 'verify'
    # - 'cleanup'
    - 'destroy'
